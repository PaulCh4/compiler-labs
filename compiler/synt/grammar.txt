// Expression - сворачивается в const
// Instruction - это то, что можно выполнить
// Declaration - это то, что будет заносить новую переменную в список созданных переменных
// PreCall - подготовка к вызову метода
// FunctionCall - вызов метода
// Method - объявление метода в начале программы
// CaseLine - часный случай в case
// Cases - набор CaseLine внутри Switch


CaseLine = Case + Expression + BOpen + InstructionSet + BClose                                                               //0
Cases = CaseLine
Cases = Cases + CaseLine
Expression = Const
Method = Declaration + POpen + PClose + BOpen + InstructionSet + BClose
Instruction = Declaration + Semicolon                                                                                   //5
Instruction = Declaration + SetOp + Expression + Semicolon
Instruction = Declaration + SetOp + New + Type + SBOpen + Expression + SBClose + Semicolon
Instruction = Do + BOpen + InstructionSet + BClose + While + Expression + Semicolon
Instruction = Expression + Arifm + Arifm
Expression = Expression + Arifm + Expression                                                                            //10
Expression = Expression + Comp + Expression
Instruction = For + POpen + Instruction + Expression + Semicolon + Instruction + PClose + BOpen + InstructionSet + BClose
Instruction = FunctionCall + Semicolon
Identifier = Identifier + SBOpen + Expression + SBClose  // идентификатор элемента в массиве
Instruction = Identifier + SetOp + Expression + Semicolon                                                               //15
FunctionCall = Identifier + Expression
FunctionCall = Identifier + POpen + PClose
PreCall = Identifier + Identifier
Expression = Identifier
Instruction = If + Expression + BOpen + InstructionSet + BClose + Else + BOpen + InstructionSet + BClose                //20
Instruction = If + Expression + BOpen + InstructionSet + BClose
InstructionSet = Instruction
InstructionSet = InstructionSet + Instruction
InstructionSet = InstructionSet + InstructionSet
Expression = POpen + Expression + PClose                                                                                //25
PreCall = PreCall + Dot + Identifier
FunctionCall = PreCall + Expression
FunctionCall = PreCall + POpen + PClose
Instruction = Switch + Expression + BOpen + Cases + BClose
Declaration = Type + Identifier                                                                                         //30
Declaration = Type + SBOpen + SBClose + Identifier
Instruction = While + Expression + BOpen + InstructionSet + BClose
Cases = Cases + Cases